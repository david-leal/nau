<?xml version="1.0" ?>
<materialLib name="Voxels">

	<renderTargets>
		<renderTarget name ="dummy">
			<SIZE width="GridSize" height="GridSize" />
			<colors>
				<color name="dummy" internalFormat="RGBA" />
			</colors>
		</renderTarget>
		<renderTarget name ="RSM">
			<SIZE width="4096" height="4096" />
			<CLEAR_VALUES r=0.0 g=0.0 b=0.0 a=0.0/>
			<colors>
				<color name="RSM" internalFormat="RGBA" />
				<color name="posRSM" internalFormat="RGBA32F" />
			</colors>
		</renderTarget>
		<renderTarget name ="RSMTest">
			<SIZE width="4096" height="4096" />
			<CLEAR_VALUES r=0.0 g=0.0 b=0.0 a=0.0/>
			<colors>
				<color name="RSMTest" internalFormat="RGBA" />
			</colors>
		</renderTarget>
		<renderTarget name ="scene">
			<SIZE width="1024" height="1024" />
			<CLEAR_VALUES r=0 g=0 b=0 a=0 />
			<colors>
				<color name="pos" internalFormat="RGBA32F" />
				<color name="normal" internalFormat="RGBA32F" />
				<color name="color" internalFormat="RGBA" />
			</colors>
		</renderTarget>
	</renderTargets>

	<textures>
		<texture name="gridColor">
			<WIDTH value="GridSize" />
			<HEIGHT value="GridSize" />
			<DEPTH value="GridSize" />
			<INTERNAL_FORMAT value="RGBA" />
			<MIPMAP value = true />
		</texture>	
		<texture name="gridNormal">
			<WIDTH value="GridSize" />
			<HEIGHT value="GridSize" />
			<DEPTH value="GridSize" />
			<INTERNAL_FORMAT value="RGBA" />
			<MIPMAP value = true />
		</texture>	
	</textures>

	<buffers>
		<buffer name="atomic">
			<SIZE value=32 />
			<!--CLEAR value="BY_FRAME" /-->
			<structure>
				<field value="UINT" />
			</structure>	
		</buffer>
		<buffer name="dummy" >
			<SIZE value = 16 />
			<structure>
				<field value="FLOAT" />
				<field value="FLOAT" />
				<field value="FLOAT" />
				<field value="FLOAT" />
			</structure>	
		</buffer>
	</buffers>
	
	<shaders>
		<shader name="voxelization" 	vs = "shaders/voxelization.vert" 
										gs = "shaders/voxelization.geom"
										ps = "shaders/voxelization.frag" /> 
										
		<shader name="voxelization2" 	vs = "shaders/voxelization2.vert" 
										gs = "shaders/voxelization2.geom"
										ps = "shaders/voxelization2.frag" /> 
										
		<shader name="showVoxels" 		vs = "shaders/showVoxels.vert" 
										gs = "shaders/showVoxels.geom"
										ps = "shaders/showVoxels.frag" /> 
										
		<shader name="lightInjection" 	vs = "shaders/lightInjection.vert" 
										ps = "shaders/lightInjection.frag" /> 

		<shader name="showVoxelCubes" 	vs = "shaders/showVoxels2.vert" 
										ps = "shaders/showVoxels2.frag" /> 
										
		<shader name="RSM"			 	vs = "shaders/RSM.vert" 
										ps = "shaders/RSM.frag" /> 
										
		<shader name="mipmap" 			cs = "shaders/mipmap.comp" /> 

		<shader name="mipmap2" 			cs = "shaders/mipmap2.comp" /> 

		<shader name="computeCubePos" 	cs = "shaders/computeCubePos.comp" /> 
		
		<shader name="resetOpacity" 	cs = "shaders/resetOpacity.comp" /> 

		<shader name="renderToTexture" 	vs = "shaders/renderToTexture.vert" 
										ps = "shaders/renderToTexture.frag" /> 

		<shader name="renderToTexture2" vs = "shaders/renderToTexture2.vert" 
										ps = "shaders/renderToTexture2.frag" /> 

		<shader name="computeAO" 		vs = "shaders/computeAO.vert" 
										ps = "shaders/computeAO.frag" /> 
		
		<shader name="computeIndirectLight" 		
										vs = "shaders/computeIndirectLight.vert" 
										ps = "shaders/computeIndirectLight.frag" /> 
		
	</shaders>
	
	<states>
		<state name="voxelization">
			<CULL_FACE value=0 />
			<DEPTH_TEST value=0 />
		</state>
		<state name="NoCull">
			<CULL_FACE value=0 />
		</state>	
		
	</states>
	
	<materials>
	
		<material name ="voxelization">
			<shader name="voxelization">
				<values>
					<valueof uniform="imageUnit"	type="IMAGE_TEXTURE" context="CURRENT"
														id=1 component="UNIT" />
					<valueof uniform="imageUnitN"	type="IMAGE_TEXTURE" context="CURRENT"
														id=2 component="UNIT" />
					<valueof uniform="camXPV"		type="CAMERA" context="xx"
														component="PROJECTION_VIEW_MATRIX" />
					<valueof uniform="camYPV"		type="CAMERA" context="yy"
														component="PROJECTION_VIEW_MATRIX" />
					<valueof uniform="camZPV"		type="CAMERA" context="zz"
														component="PROJECTION_VIEW_MATRIX" />
					<valueof uniform="WindowSize"	type="VIEWPORT" context="CURRENT"
														component="ABSOLUT_SIZE" />
					<valueof uniform="M"			type="RENDERER" context="CURRENT"
														component="MODEL" />	
					<valueof uniform="diffuse" 		type="COLOR" context="CURRENT" 
														component="DIFFUSE" />
					<valueof uniform="shininess" 	type="COLOR" context="CURRENT" 
														component="SHININESS" />
					<valueof uniform="texCount"		type="RENDERER" context="CURRENT" 
														component="TEXTURE_COUNT" />
					<valueof uniform="texUnit" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="0" />				
				</values>
			</shader>
			
			<imageTextures>
				<imageTexture UNIT=1 texture="gridColor" >
					<ACCESS value="READ_WRITE" />
					<LEVEL value=0 />
					<CLEAR value="true"/>
					<INTERNAL_FORMAT value="RGBA" />
				</imageTexture>
				<imageTexture UNIT=2 texture="gridNormal" >
					<ACCESS value="READ_WRITE" />
					<LEVEL value=0 />
					<CLEAR value="true"/>
					<INTERNAL_FORMAT value="R32UI" />
				</imageTexture>
			</imageTextures>
			
			<state name="voxelization"/>
		</material>
	
		<material name ="voxelization2">
			<shader name="voxelization2">
				<values>
					<valueof uniform="imageUnit"	type="IMAGE_TEXTURE" context="CURRENT"
														id=1 component="UNIT" />
					<valueof uniform="camXPV"		type="CAMERA" context="xx"
														component="PROJECTION_VIEW_MATRIX" />
					<valueof uniform="camYPV"		type="CAMERA" context="yy"
														component="PROJECTION_VIEW_MATRIX" />
					<valueof uniform="camZPV"		type="CAMERA" context="zz"
														component="PROJECTION_VIEW_MATRIX" />
					<valueof uniform="WindowSize"	type="VIEWPORT" context="CURRENT"
														component="ABSOLUT_SIZE" />
				
				</values>
			</shader>
		</material>

		<material name="mipmap2" >
			<shader name="mipmap2">
				<values>
					<valueof uniform="imageUnit"	type="IMAGE_TEXTURE" context="CURRENT"
														id=1 component="UNIT" />
					<valueof uniform="imageUnitN"	type="IMAGE_TEXTURE" context="CURRENT"
														id=2 component="UNIT" />
					<valueof uniform="grid"			type="TEXTURE_BINDING" context="CURRENT"
														id=1 component="UNIT" />
					<valueof uniform="normal"		type="TEXTURE_BINDING" context="CURRENT"
														id=2 component="UNIT" />
					<valueof uniform="destMipLevel"	type="PASS" context="CURRENT"
														component="GridCurrentLevel" />
				</values>
			</shader>	
			<imageTextures>
				<imageTexture UNIT=1 texture="gridColor" >
					<ACCESS value="WRITE_ONLY" />
					<LEVEL value=1 />
					<CLEAR value="true"/>
				</imageTexture>
				<imageTexture UNIT=2 texture="gridNormal" >
					<ACCESS value="WRITE_ONLY" />
					<LEVEL value=1 />
					<CLEAR value="true"/>
				</imageTexture>
			</imageTextures>
			<textures>
				<texture UNIT=1 name="gridColor" >
					<!--MIN_FILTER value="NEAREST_MIPMAP_NEAREST" />
					<MAG_FILTER value="NEAREST" /-->
					<MIN_FILTER value="LINEAR_MIPMAP_NEAREST" />
					<MAG_FILTER value="LINEAR" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=2 name="gridNormal" >
					<MIN_FILTER value="NEAREST_MIPMAP_NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
			</textures>
		</material>
		
		<material name="mipmap" >
			<shader name="mipmap">
				<values>
					<valueof uniform="imageUnit"	type="IMAGE_TEXTURE" context="CURRENT"
														id=1 component="UNIT" />
					<valueof uniform="grid"			type="TEXTURE_BINDING" context="CURRENT"
														id=1 component="UNIT" />
					<valueof uniform="destMipLevel"	type="PASS" context="CURRENT"
														component="GridCurrentLevel" />
				</values>
			</shader>	
			<imageTextures>
				<imageTexture UNIT=1 texture="gridColor" >
					<ACCESS value="WRITE_ONLY" />
					<LEVEL value=1 />
					<CLEAR value="true"/>
				</imageTexture>
			</imageTextures>
			<textures>
				<texture UNIT=1 name="gridColor" >
					<MIN_FILTER value="NEAREST_MIPMAP_NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
			</textures>
		</material>

		<material name="resetOpacity" >
			<shader name="resetOpacity">
				<values>
					<valueof uniform="imageUnit"	type="IMAGE_TEXTURE" context="CURRENT"
														id=1 component="UNIT" />
				</values>
			</shader>	
			<imageTextures>
				<imageTexture UNIT=1 texture="gridColor" >
					<ACCESS value="READ_WRITE" />
					<LEVEL value=0 />
					<CLEAR value="false"/>
				</imageTexture>
			</imageTextures>
		</material>

		<material name ="showVoxels">
			<shader name="showVoxels">
				<values>
					<valueof uniform="RayOrigin"    type="CAMERA" context="CURRENT" 
														component="POSITION" />
					<valueof uniform="FOV"			type="CAMERA" context="CURRENT"
														component="FOV" />
					<valueof uniform="PVM"          type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="VM"         	type="RENDERER" context="CURRENT" 
														component="VIEW_MODEL" />
					<valueof uniform="grid"			type="TEXTURE_BINDING" context="CURRENT"
														id=1 component="UNIT" />
					<valueof uniform="WindowSize"	type="VIEWPORT" context="CURRENT"
														component="ABSOLUT_SIZE" />
					<valueof uniform="GridSize" 	type="PASS" context="CURRENT"
														component="GridSize" />
				</values>
			</shader>
			
			<textures>
				<texture UNIT=1 name="gridColor" >
					<MIN_FILTER value="NEAREST_MIPMAP_NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
			</textures>
			
			<state name="NoCull" />
		</material>

		<material name ="lightInjection">
			<shader name="lightInjection">
				<values>
					<valueof uniform="CamPos"    type="CAMERA" context="voxels#RSM-LightCam" 
														component="POSITION" />
					<valueof uniform="RayDirection" type="CAMERA" context="voxels#RSM-LightCam" 
														component="VIEW" />
					<valueof uniform="upV" type="CAMERA" context="voxels#RSM-LightCam" 
														component="NORMALIZED_UP" />
					<valueof uniform="rightV" type="CAMERA" context="voxels#RSM-LightCam" 
														component="NORMALIZED_RIGHT" />
					<valueof uniform="near" type="CAMERA" context="voxels#RSM-LightCam" 
														component="NEAR" />
					<valueof uniform="right" type="CAMERA" context="voxels#RSM-LightCam" 
														component="RIGHT" />
					<valueof uniform="left" type="CAMERA" context="voxels#RSM-LightCam" 
														component="LEFT" />
					<valueof uniform="bottom" type="CAMERA" context="voxels#RSM-LightCam" 
														component="BOTTOM" />
					<valueof uniform="top" type="CAMERA" context="voxels#RSM-LightCam" 
														component="TOP" />
														
					<valueof uniform="texRSM" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="1" />			
					<valueof uniform="texPos" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="2" />
					<valueof uniform="PVM"          type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="VM"         	type="RENDERER" context="CURRENT" 
														component="VIEW_MODEL" />
					<valueof uniform="grid"			type="IMAGE_TEXTURE" context="CURRENT"
														id=1 component="UNIT" />
					<valueof uniform="WindowSize"	type="VIEWPORT" context="CURRENT"
														component="ABSOLUT_SIZE" />
					<valueof uniform="GridSize" 	type="PASS" context="CURRENT"
														component="GridSize" />
				</values>
			</shader>
			<textures>
				<texture UNIT=1 name="RSM" >
					<MIN_FILTER value="NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=2 name="posRSM" >
					<MIN_FILTER value="NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
			</textures>
			<imageTextures>
				<imageTexture UNIT=1 texture="gridColor" >
					<ACCESS value="READ_WRITE" />
					<LEVEL value=0 />
					<CLEAR value="false"/>
					<INTERNAL_FORMAT value="R32UI" />
				</imageTexture>
			</imageTextures>
		</material>

		<material  name="RSM" >
			<shader name="RSM">
				<values>
					<valueof uniform="PVM"  		type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="NormalMat"    type="RENDERER" context="CURRENT" 
														component="NORMAL" />
					<valueof uniform="diffuse" 		type="COLOR" context="CURRENT" 
														component="DIFFUSE" />
					<valueof uniform="lightDir" 	type="LIGHT" context="Sun" 
														component="DIRECTION" /> 
					<valueof uniform="texCount"		type="RENDERER" context="CURRENT" 
														component="TEXTURE_COUNT" />
					<valueof uniform="texUnit" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="0" />				
				</values>
			</shader>
		</material>
		

		<material name ="renderScene">
			<shader name="renderToTexture">
				<values>
					<valueof uniform="PVM"      	type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="NormalMat"    type="RENDERER" context="CURRENT" 
														component="NORMAL" />
					<valueof uniform="diffuse" 		type="COLOR" context="CURRENT" 
														component="DIFFUSE" />
					<valueof uniform="shininess" 	type="COLOR" context="CURRENT" 
														component="SHININESS" />
					<valueof uniform="texCount"		type="RENDERER" context="CURRENT" 
														component="TEXTURE_COUNT" />
					<valueof uniform="texUnit" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="0" />				
				</values>
			</shader>
		</material>

		<material name ="renderScene2">
			<shader name="renderToTexture2">
				<values>
 					<valueof uniform="LSpaceMat" 	type="CAMERA"  context="voxels#RSM-LightCam" 
														component="TS05_PVM_MATRIX" />
					<valueof uniform="PVM"      	type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="NormalMat"    type="RENDERER" context="CURRENT" 
														component="NORMAL" />
					<valueof uniform="diffuse" 		type="COLOR" context="CURRENT" 
														component="DIFFUSE" />
					<valueof uniform="shininess" 	type="COLOR" context="CURRENT" 
														component="SHININESS" />
					<valueof uniform="texCount"		type="RENDERER" context="CURRENT" 
														component="TEXTURE_COUNT" />
					<valueof uniform="texUnit" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="0" />	
					<valueof uniform="texPos" 		type="TEXTURE_BINDING" context="CURRENT"
														component="UNIT" id="1" />
				</values>
			</shader>
		</material>
	
		<material name ="computeAO">
			<shader name="computeAO">
				<values>
					<valueof uniform="texPos" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="0" />				
					<valueof uniform="texNormal" 	type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="3" />				
					<valueof uniform="texColor" 	type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="4" />				
					<valueof uniform="grid" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="1" />				
					<!--valueof uniform="gridNormal" 	type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="2" /-->				
					<valueof uniform="GridSize" 	type="PASS" context="CURRENT"
														component="GridSize" />
				</values>
			</shader>	
			<textures>
				<texture UNIT=0 name="pos" >
					<MIN_FILTER value="NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=3 name="normal" >
					<MIN_FILTER value="NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=4 name="color" >
					<MIN_FILTER value="NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=1 name="gridColor" >
					<MIN_FILTER value="LINEAR_MIPMAP_LINEAR" />
					<MAG_FILTER value="LINEAR" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<!--texture UNIT=2 name="gridNormal" >
					<MIN_FILTER value="NEAREST_MIPMAP_NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture-->
				
			</textures>
		</material>

		<material name ="computeIndirectLight">
			<shader name="computeIndirectLight">
				<values>
					<valueof uniform="camPos"		type="CAMERA" context="MainCamera"
														component="POSITION" />
					<valueof uniform="texPos" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="0" />				
					<valueof uniform="texNormal" 	type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="3" />				
					<valueof uniform="texColor" 	type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="4" />				
					<valueof uniform="grid" 		type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="1" />				
					<valueof uniform="gridN" 	type="TEXTURE_BINDING" context="CURRENT" 
														component="UNIT" id="2" />				
					<valueof uniform="GridSize" 	type="PASS" context="CURRENT"
														component="GridSize" />
				</values>
			</shader>	
			<textures>
				<texture UNIT=0 name="pos" >
					<MIN_FILTER value="NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=3 name="normal" >
					<MIN_FILTER value="NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=4 name="color" >
					<MIN_FILTER value="NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=1 name="gridColor" >
					<MIN_FILTER value="LINEAR_MIPMAP_LINEAR" />
					<MAG_FILTER value="LINEAR" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=2 name="gridNormal" >
					<MIN_FILTER value="LINEAR_MIPMAP_LINEAR" />
					<MAG_FILTER value="LINEAR" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				
			</textures>
		</material>
		

		</materials>
	
</materialLib>